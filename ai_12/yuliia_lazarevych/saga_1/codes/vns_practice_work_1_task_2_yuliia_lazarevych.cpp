//Увести п’ять наборів сторін трикутника а, b, с і визначити, для яких сторін висота h_a буде найбільшою. 
//Підказка: h_a=2/a √(p(p-a)(p-c)),де p=(a+b+c)/2

#include<iostream>
#include<cmath>
using namespace std;

int main(){
const int N = 5; //константа для збереження кількості трикутників
    int a[N], b[N], c[N]; //одновимірні масиви для зберігання сторін трикутників

    cout << "Введіть сторони а трикутників: " << endl;//оператори виведення
    for (int i = 0; i < N; i++) {
        cin >> a[i]; //оператори введення
    }

    cout << "Введіть сторони б трикутників: " << endl;
    for (int i = 0; i < N; i++) {
        cin >> b[i];
    }

    cout << "Введіть сторони с трикутників: " << endl;
    for (int i = 0; i < N; i++) {
        cin >> c[i];
    }

    double p[N], h[N]; //масиви для напівпериметрів і висот
    for (int i = 0; i < N; i++) {
        p[i] = (a[i] + b[i] + c[i]) / 2.0; // Обчислення напівпериметра
        h[i] = (2.0 / a[i]) * sqrt(p[i] * (p[i] - a[i]) * (p[i] - b[i]) * (p[i] - c[i])); //математичні операції для виконання мат. обчислень
    }


    double max_h = h[0];//дійсна змінна для подвійної точності обчислень
    int max_index = 0;
    for (int i = 1; i < N; i++) {//цикл для перевірки висот та знаходження максимальної
        if (h[i] > max_h) {//умовне розгалуження для перевірки висот та знаходження максимальної
            max_h = h[i];
            max_index = i;
        }
    }

    cout << "Найбільша висота: h" << (max_index + 1) << " = " << max_h << endl;
    return 0;
}
